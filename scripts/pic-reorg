#!/usr/bin/env python
import argparse
import datetime
import os


PATH = os.getcwd()


def confirm(text=None):
    if text:
        print(text)
        print()
    res = raw_input("You ok with that? [y/N] ")
    if not res or res.lower()[0] != "y":
        return False
    return True


def ensure_directory(year, month):
    dirname = os.path.join(PATH, "%04d" % year, "%02d" % month)
    if not os.path.exists(dirname):
        print("Creating directory %s..." % dirname)
        if confirm():
            os.makedirs(dirname)
        else:
            print('Exiting...')
            exit(0)
    return dirname


def try_timestamp_from_filename(path):
    filename = os.path.split(path)[1]
    if not (filename.startswith("IMG_") and filename[12:13] == "_"):
        return None
    try:
        possible_year = int(filename[4:8])
        possible_month = int(filename[8:10])
        possible_day = int(filename[10:12])
    except ValueError:
        return None
    return datetime.datetime(year=possible_year,
                             month=possible_month,
                             day=possible_day,
                             )


def get_timestamp(path):
    timestamp = try_timestamp_from_filename(path)
    if timestamp:
        return timestamp
    timestamp = os.path.getmtime(path)
    timestamp = datetime.datetime.fromtimestamp(timestamp)
    return timestamp


def main():
    for dirpath, dirnames, filenames in os.walk(PATH):
        print("Starting walk of directory: %s" % dirpath)
        for filename in filenames:
            path = "%s/%s" % (dirpath, filename)
            print('Processing file: %s...' % path)
            timestamp = get_timestamp(path)
            destination = ensure_directory(year=timestamp.year,
                                           month=timestamp.month,
                                           )
            destination = os.path.join(destination, filename)
            if path == destination:
                print("Already in the right place; skipping: %s" % destination)
                continue
            if os.path.exists(destination):
                print("Won't move %s to %s - something else exists there; skipping." % (path, destination))
                continue
            print("Moving %s to %s..." % (path, destination))
            if confirm():
                os.rename(path, destination)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Reorganizes the locations of pictures in a directory '
        'tree into an opinionated alternative.'
    )
    parser.add_argument(
        '-y', '--yes',
        action='store_true',
        help='skip confirmation',
    )
    args = parser.parse_args()
    confirm_text = ("This program will take all files in %s, "
                    "and move them into new directories "
                    "according to their timestamp in "
                    "YYYY/MM/DD/ format." % PATH)
    if (not args.yes) and not confirm(confirm_text):
        exit(0)
    main()
