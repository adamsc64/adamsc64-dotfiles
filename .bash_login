#!/bin/bash

# My .bash_login file #
#######################
# Add my .bash_login file. This sets a colorized bash prompt, some reasonable
# PATH defaults, and adds Amazon Web Services scripts to the path.

# Fancy colorized terminal settings #
#####################################
# What I'm doing here is defining the environment variable that the bash shell
# uses to render its prompt. The terminal uses the first part to override its
# default window title.
#
# For informating about colors:
# https://wiki.archlinux.org/index.php/Color_Bash_Prompt
#
function set_custom_prompt {
    #Prompt and prompt colors
    # 30m - Black
    # 31m - Red
    # 32m - Green
    # 33m - Yellow
    # 34m - Blue
    # 35m - Purple
    # 36m - Cyan
    # 37m - White
    # 0 - Normal
    # 1 - Bold
    local BLACK="\[\033[0;30m\]"
    local BLACKBOLD="\[\033[1;30m\]"
    local RED="\[\033[0;31m\]"
    local REDBOLD="\[\033[1;31m\]"
    local GREEN="\[\033[0;32m\]"
    local GREENBOLD="\[\033[1;32m\]"
    local YELLOW="\[\033[0;33m\]"
    local YELLOWBOLD="\[\033[1;33m\]"
    local BLUE="\[\033[0;34m\]"
    local BLUEBOLD="\[\033[1;34m\]"
    local PURPLE="\[\033[0;35m\]"
    local PURPLEBOLD="\[\033[1;35m\]"
    local CYAN="\[\033[0;36m\]"
    local CYANBOLD="\[\033[1;36m\]"
    local WHITE="\[\033[0;37m\]"
    local WHITEBOLD="\[\033[1;37m\]"

    # Sets the terminal title to username, hostname, and $CWD.
    export PS1="\[\e]2;\u@\H \w\a\]"
    # Current time:
    export PS1+="$BLACKBOLD\t "
    # Current hostname:
    export PS1+="$PURPLE\h"
    # @ symbol
    export PS1+="$BLACKBOLD@"
    # The current working directory
    export PS1+="$GREEN\w "
    # The classic $
    export PS1+="$GREENBOLD\$ "
    # Reset back to normal color.
    export PS1+="\[\e[0m\]"
}
set_custom_prompt  # invokes function

#
# Also, default ls to colorized display.
# See http://geoff.greer.fm/lscolors/
    export CLICOLOR=1
    export LSCOLORS=FxFxCxDxBxegedabagacad
# Set grep to color by default
    alias grep="grep --color=auto"

# I always forget the name of the MacOS equivalent to strace,
# so I have it as an alias here.
    alias strace="dtruss"

# Set $PATH variable. #
#######################
# Note that these definitions are in reverse order.
# Shared local scripts.
    export PATH=/usr/local/bin:/usr/local/sbin:$PATH
# Always have my own executables come first.
    export PATH=$HOME/bin:$HOME/scripts:$PATH

# Store history permanently and with time
export HISTFILESIZE=
export HISTSIZE=
#export HISTTIMEFORMAT="[%F %T] "

# Amazon Web Services #
#######################
# The command line tools depend on an environment variable (EC2_HOME) to locate
# supporting libraries. You'll need to set this environment variable before you
# can use the tools. This should be set to the path of the directory into which
# the command line tools were unzipped. This directory is named
# ec2-api-tools-A.B-rrrr (A, B and r are version/release numbers), and contains
# sub-directories named bin and lib.
    export EC2_HOME=$HOME/.ec2/ec2-api-tools-1.4.3.0
    export PATH=$PATH:$EC2_HOME/bin

export PYTHONDONTWRITEBYTECODE=1

source ~/.git-shortcuts
source ~/.profile  # for local overrides

[[ "$GITHUB_REPOSITORY" == github/* && "$CODESPACES" == true ]] && IS_WORK_CODESPACE=true
[[ "$(hostname)" == "adamsc64-macbook-16" ]] && IS_WORK_LAPTOP=true
[[ IS_WORK_CODESPACE == true || IS_WORK_HOSTNAME=true ]] && IS_WORK=true

if [[ $IS_WORK == true ]]; then
    git config --global user.email "adamsc64@github.com"
fi